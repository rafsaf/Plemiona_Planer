# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached venv dev
        id: cached-poetry-dependencies-dev
        uses: actions/cache@v2
        with:
          path: venv-dev
          key: venv-dev-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install dependencies and actiavte virtualenv dev
        if: steps.cached-poetry-dependencies-dev.outputs.cache-hit != 'true'
        run: |
          python -m venv venv-dev
          source venv-dev/bin/activate
          pip install -r requirements-dev.txt
      - name: Load cached venv prod
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies and actiavte virtualenv prod
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          source venv-dev/bin/activate
          flake8 base rest_api tribal_wars_planer utils --count --statistics
      - name: Create .env file
        run: |
          cp ./.env.example ./.env
      - name: Migrate
        run: |
          source venv/bin/activate
          export POSTGRES_HOST=localhost
          python manage.py migrate
      - name: Coverage full tests
        run: |
          source venv-dev/bin/activate
          export POSTGRES_HOST=localhost
          coverage run manage.py test
          coverage report
