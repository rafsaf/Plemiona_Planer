version: "3.3"

services:
  postgres:
    restart: always
    image: postgres
    volumes:
      - ./data_postgres/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env.example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./metrics:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus-dev.yml

  web:
    depends_on:
      - postgres
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile.prod
    ports:
      - 7999:80
      - 8001:8001
    env_file:
      - .env.example
    environment:
      - DEBUG=false
    volumes:
      - "./media/:/build/media/"
      - "./static/:/build/static/"

  cronjobs:
    depends_on:
      - postgres
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile.cronjobs
    env_file:
      - .env.example
    command: python -m base.run_cronjobs
    environment:
      - DJANGO_SETTINGS_MODULE=tribal_wars_planer.settings

volumes:
  prometheus-data: